create or replace FUNCTION FC_PRACA_MAIS_PROXIMA
(NUM_LATIT VARCHAR2, NUM_LONGI VARCHAR2, TIPO_RETORNO NUMBER)
RETURN
VARCHAR2 AS
RETORNO VARCHAR2(6);
DES_LATIT VARCHAR2(20);
DES_LONGI VARCHAR2(20);
--
DES_LATIT_MENOR VARCHAR2(6);
DES_LATIT_MAIOR VARCHAR2(6);
DES_LONGI_MENOR VARCHAR2(6);
DES_LONGI_MAIOR VARCHAR2(6);
--
D_DES_LATIT_MENOR VARCHAR2(20);
D_DES_LATIT_MAIOR VARCHAR2(20);
D_DES_LONGI_MENOR VARCHAR2(20);
D_DES_LONGI_MAIOR VARCHAR2(20);
--
CONTADOR  NUMBER:=0;
MENOR     NUMBER:=0;
DISTANCIA NUMBER:=0;
--
--CURSOR C1(COORDENADA NUMBER, TIPO_SAIDA NUMBER) IS
--	SELECT NVL(FC_CONV_COORDENADA_DEC_GEO(COORDENADA,TIPO_SAIDA),000000) AS COORD FROM DUAL;
--RC1 C1%ROWTYPE;
--
CURSOR C2(DES_LATIT_MENOR VARCHAR2, DES_LATIT_MAIOR VARCHAR2, DES_LONGI_MENOR VARCHAR2, DES_LONGI_MAIOR VARCHAR2) IS
	SELECT NVL(ctl_vincd, 0) AS ctl_vincd,
	       NVL(des_latit,'000000') AS des_latit, 
	       NVL(des_longi,'000000') AS des_longi	
	FROM ENDERECO_VINCULADO
	WHERE des_latit BETWEEN DES_LATIT_MENOR AND DES_LATIT_MAIOR
	AND des_longi BETWEEN DES_LONGI_MENOR AND DES_LONGI_MAIOR;
RC2 C2%ROWTYPE;
--
CURSOR C3(DES_LATIT_MENOR VARCHAR2, DES_LATIT_MAIOR VARCHAR2, DES_LONGI_MENOR VARCHAR2, DES_LONGI_MAIOR VARCHAR2) IS
	SELECT NVL(cod_praca,0) AS cod_praca,
        NVL(num_latit,0) AS des_latit, 
        NVL(num_longi,0) AS des_longi	
	FROM PRACA
	WHERE num_latit BETWEEN DES_LATIT_MENOR AND DES_LATIT_MAIOR
	AND num_longi BETWEEN DES_LONGI_MENOR AND DES_LONGI_MAIOR;
RC3 C3%ROWTYPE;
--
BEGIN
	IF TIPO_RETORNO = 1 THEN
		--
		DES_LATIT := NUM_LATIT;
		IF INSTR(DES_LATIT,'-') > 0 THEN
			DES_LATIT := SUBSTR(DES_LATIT,2,LENGTH(DES_LATIT));
		END IF;
		DES_LONGI := NUM_LONGI;
		IF INSTR(DES_LONGI,'-') > 0 THEN
			DES_LONGI := SUBSTR(DES_LONGI,2,LENGTH(DES_LATIT));
		END IF;	
		--
		DES_LATIT := FC_CONV_COORDENADA_DEC_GEO(DES_LATIT,1);
		DES_LONGI := FC_CONV_COORDENADA_DEC_GEO(DES_LONGI,1);
		--
		DES_LATIT_MENOR	:= FC_SOMAR_COORDENADA(DES_LATIT,-15);
		DES_LATIT_MAIOR	:= FC_SOMAR_COORDENADA(DES_LATIT, 15);
		DES_LONGI_MENOR	:= FC_SOMAR_COORDENADA(DES_LONGI,-15);
		DES_LONGI_MAIOR	:= FC_SOMAR_COORDENADA(DES_LONGI, 15);
		--		
		OPEN C2(DES_LATIT_MENOR, DES_LATIT_MAIOR, DES_LONGI_MENOR, DES_LONGI_MAIOR);
		  LOOP
		    FETCH C2 INTO RC2;
		      IF C2%NOTFOUND THEN
			 EXIT;
		      END IF;
	-----------------------------------------------------------------------------------------------------------
		      DISTANCIA := FC_DISTANCIA_PONTOS_INFOLOG(DES_LATIT, DES_LONGI, RC2.DES_LATIT, RC2.DES_LONGI);
	-----------------------------------------------------------------------------------------------------------
		      IF DISTANCIA < MENOR OR CONTADOR = 0 THEN
			       MENOR := DISTANCIA;
			       RETORNO := RC2.CTL_VINCD;
		      END IF;
		      CONTADOR := CONTADOR + 1;
		  END LOOP;
		CLOSE C2;
	ELSIF TIPO_RETORNO = 2 THEN
		--
		DES_LATIT := NUM_LATIT;
		IF INSTR(DES_LATIT,'-') > 0 THEN
			DES_LATIT := SUBSTR(DES_LATIT,2,LENGTH(DES_LATIT));
		END IF;
		DES_LONGI := NUM_LONGI;
		IF INSTR(DES_LONGI,'-') > 0 THEN
			DES_LONGI := SUBSTR(DES_LONGI,2,LENGTH(DES_LATIT));
		END IF;	
		--
		DES_LATIT := FC_CONV_COORDENADA_DEC_GEO(DES_LATIT,1);
		DES_LONGI := FC_CONV_COORDENADA_DEC_GEO(DES_LONGI,1);
		--
		DES_LATIT_MENOR	:= FC_SOMAR_COORDENADA(DES_LATIT,-15);
		DES_LATIT_MAIOR	:= FC_SOMAR_COORDENADA(DES_LATIT, 15);
		DES_LONGI_MENOR	:= FC_SOMAR_COORDENADA(DES_LONGI,-15);
		DES_LONGI_MAIOR	:= FC_SOMAR_COORDENADA(DES_LONGI, 15);
		--
		D_DES_LATIT_MENOR := FC_CONV_COORDENADA_DEC_GEO(DES_LATIT_MENOR,2);
		D_DES_LATIT_MAIOR := FC_CONV_COORDENADA_DEC_GEO(DES_LATIT_MAIOR,2);
		D_DES_LONGI_MENOR := FC_CONV_COORDENADA_DEC_GEO(DES_LONGI_MENOR,2);
		D_DES_LONGI_MAIOR := FC_CONV_COORDENADA_DEC_GEO(DES_LONGI_MAIOR,2);
		--
		OPEN C3(DES_LATIT_MENOR, DES_LATIT_MAIOR, DES_LONGI_MENOR, DES_LONGI_MAIOR);
		  LOOP
		    FETCH C3 INTO RC3;
		      IF C3%NOTFOUND THEN
			 EXIT;
		      END IF;
	-----------------------------------------------------------------------------------------------------------
		      DISTANCIA := FC_DISTANCIA_PONTOS_INFOLOG(DES_LATIT, DES_LONGI, RC3.DES_LATIT, RC3.DES_LONGI);
	-----------------------------------------------------------------------------------------------------------
		      IF DISTANCIA < MENOR OR CONTADOR = 0 THEN
			       MENOR := DISTANCIA;
			       RETORNO := RC3.COD_PRACA;
		      END IF;
		      CONTADOR := CONTADOR + 1;
		  END LOOP;
		CLOSE C3;
	END IF;
	RETURN RETORNO;
END;